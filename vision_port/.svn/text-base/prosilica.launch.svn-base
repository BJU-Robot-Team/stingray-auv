<!--
Runs two Prosilica cameras in polled mode and several viewers for raw and rectified images.
-->

<launch>
    <!-- The left camera node publishes raw images. -->
    <node 
        pkg="prosilica_camera"
        type="prosilica_node"
        name="prosilica_left"
        output="screen">
        <param
            name="ip_address"
            type="str"
            value="192.168.2.102"
        />
        <param
            name="trigger_mode"
            type="str"
            value="streaming"
        /> 
        <remap
            from="camera"
            to="camera_left"
        />
        <rosparam
            command="load"
            file="$(find prosilica_camera)/cam_settings.yaml"
        />
    </node>

    <!-- The right camera node publishes raw images. -->
    <node 
        pkg="prosilica_camera"
        type="prosilica_node"
        name="prosilica_right"
        output="screen">
        <param
            name="ip_address"
            type="str"
            value="192.168.2.101"
        />
        <param
            name="trigger_mode"
            type="str"
            value="streaming" 
        />
        <remap
            from="camera"
            to="camera_right"
         />
        <rosparam
            command="load"
            file="$(find prosilica_camera)/cam_settings.yaml"
        />
    </node>
    
    <group ns="camera_left">
        <!-- Image processing node for the left camera so that rectified images are published. -->
        <node
            pkg="image_proc"
            type="image_proc"
            name="left_image_proc"
            respawn="false">
        </node>

        <!-- Viewer for the raw left image. -->
        <node
            pkg="image_view"
            type="image_view"
            name="left_viewer_raw"
            respawn="false">
            <param
                name="autosize"
                type="bool"
                value="False"
            />
            <param
                name="window_name"
                type="str"
                value="'Raw Left'"
            />
            <remap
                from="image"
                to="image_raw"
            />
        </node>

        <!-- Viewer for the left, rectified color image. -->
        <node
            pkg="image_view"
            type="image_view"
            name="left_viewer_rect_color"
            respawn="false">
            <param
                name="autosize"
                type="bool"
                value="False"
            />
            <param
                name="window_name"
                type="str"
                value="'Left Color'"
            />
            <remap
                from="image"
                to="image_rect_color"
            />
        </node>
    </group>

    <group ns="camera_right">
        <!-- Image processing node for the right camera so that rectified images are published. -->
        <node
            pkg="image_proc"
            type="image_proc"
            name="image_proc_right"
            respawn="false">
        </node>

        <!-- Viewer for the raw right image. -->
        <node
            pkg="image_view"
            type="image_view"
            name="right_viewer_raw"
            respawn="false">
            <param
                name="autosize"
                type="bool"
                value="False"
            />
            <param
                name="window_name"
                type="str"
                value="'Raw Right'"
            />
            <remap
                from="image"
                to="image_raw"
            />
        </node>

        <!-- Viewer for the right, rectified color image. -->
        <node
            pkg="image_view"
            type="image_view"
            name="viewer_rect_color_right"
            respawn="false">
            <param
                name="autosize"
                type="bool"
                value="False"
            />
            <param
                name="window_name"
                type="str"
                value="'Right Rectified Color'"
            />
            <remap
                from="image"
                to="image_rect_color"
            />
        </node>
    </group>
</launch>

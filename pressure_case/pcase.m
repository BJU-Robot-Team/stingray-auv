function [ stats ]= pcase(index,len,wall,od,display)%function [ Pflow Pinf Pstab beam simple hemi] = %                pcase(index,length,wall,od,display)% PARAMETERS: %   index: material index:%       1 =  borosilicate glass%       2 = 6061-T6 aluminum%       3 = 7075-T6 aluminum%       4 = 316 stainless%       5 = delrin%       6 = UHMW polyethylene%       7 = Ertalyte%   len: length of pressure case in inches%   wall: wall thickness in inches%   od: outer diameter of pressure case in inches%   display: 1 will display the results in a readable format%% RETURNS:%   Pflow: pressure for plastic flow in psi %   Pinf: instabilities of infinite length scale in psi %   Pstab: finite length instabilities in psi%   beam: min. thickness for beam-supported flat end-cap%   simple: min. thickness for simple-supported flat end-cap%   hemi: min. thickness for semi-hemispherical end-cap%   % input is in inches% output is in psi and 1000*inchesmaterial= ['glass';	'6061 ';'7075 ';'316  ';'delrn';'UHMW ';'Ertal'	];young   = [9e3		10.6e3	10.1e3	28.0e3	4.1e2	0.6e2	4.9e2	]; %kpsiyield	= [76		40		73.0	81.0	10.0	2.4		13.0	]; %kpsipoisson = [.20		.332	.332	.332	.332	.332	.332	]; thermal = [3.2e-6	23e-6	23e-6	23e-6	81e-6	72e-6	59e-6	]; %degCdensity = [ 2.23	2.70	2.75	7.87	1.42	0.94	1.39	]; %gm/cclabl = ['Plastic flow    (psi)';         'infinite Length (psi)';		'Finite Length   (psi)';		'Beam EndCap     (mil)';		'Simple EndCap   (mil)';		'Semi-Hemisphere (mil)';		];    [nlabl nchar] = size(labl);% Calculations for cylinderical pressure case follow.E = 1000.0*young(index);SY = 1000.0*yield(index);nu = poisson(index);a = od/2;  % = radius	  Pflow = wall.*SY./a;Pinf = E.*(wall./a).^3./ (4*(1-nu.*nu) );Pstab = 0.807*E.*(wall./len).*(wall./a).^1.5 ./((1-nu.*nu).^0.75);      % Pflow is pressure for plastic flow. % Pinf is for instabilities of infinite length scale. % Pstab is for finite length instabilities.pressure = [ Pflow; Pinf; Pstab ];pressure = floor(pressure);Pfail = min(pressure);  % max pressure before fails in one of the modes    % now compute minimum end-cap thicknessesbeam = (a - wall).*sqrt(0.75*Pfail./SY);simple = (a - wall).*sqrt(0.375*(3+nu).*Pfail./SY);hemi = a.*Pfail ./ (2*SY);thickness = [ beam; simple; hemi]*1000;thickness = floor(thickness);	stats = [ pressure; thickness;];n = length(wall);  % # of unique ptsif (display==1)  disp('Failure Pressures and minimum End Cap thicknesses Reqd:')    for i=1:nlabl    t= labl(i,:);  %initialize output string    for j=1:n,	  s = sprintf('%6.0f',stats(i,j) );	  t = [t  s ];	end;	disp(t)  endend